ALTER TABLE DB_IUMS.STUDENT_RECORD
 ADD (LAST_MODIFIED  VARCHAR2(18));

ALTER TABLE DB_IUMS.STUDENT_RECORD
 ADD (ID  NUMBER);

ALTER TABLE DB_IUMS.STUDENT_RECORD
 ADD CONSTRAINT STUDENT_RECORD_PK
  PRIMARY KEY
  (ID)
  ENABLE VALIDATE;

DROP SEQUENCE DB_IUMS.SQN_STUDENT_RECORD_ID;

CREATE SEQUENCE DB_IUMS.SQN_STUDENT_RECORD_ID
  START WITH 4001
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

DROP TRIGGER DB_IUMS.STUDENT_RECORD_TRIGGER;

CREATE OR REPLACE TRIGGER DB_IUMS.STUDENT_RECORD_TRIGGER
BEFORE INSERT ON DB_IUMS.STUDENT_RECORD
FOR EACH ROW
BEGIN
  SELECT DB_IUMS.SQN_STUDENT_RECORD_ID.NEXTVAL
  INTO   :new.ID
  FROM   dual;
END;
/

ALTER TABLE DB_IUMS.SEMESTER_ENROLLMENT
 ADD (LAST_MODIFIED  VARCHAR2(18));

ALTER TABLE DB_IUMS.SEMESTER_ENROLLMENT
 ADD (ID  NUMBER);


DROP SEQUENCE DB_IUMS.SQN_SEMESTER_ENROLLMENT_ID;

CREATE SEQUENCE DB_IUMS.SQN_SEMESTER_ENROLLMENT_ID
  START WITH 6001
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

DROP TRIGGER DB_IUMS.SEMESTER_ENROLLMENT_TRIGGER;

CREATE OR REPLACE TRIGGER DB_IUMS.SEMESTER_ENROLLMENT_TRIGGER
BEFORE INSERT ON DB_IUMS.SEMESTER_ENROLLMENT
FOR EACH ROW
BEGIN
  SELECT DB_IUMS.SQN_SEMESTER_ENROLLMENT_ID.NEXTVAL
  INTO   :new.ID
  FROM   dual;
END;
/

ALTER TABLE DB_IUMS.ENROLMENT_FROM_TO
 ADD (LAST_MODIFED  VARCHAR2(18));

ALTER TABLE DB_IUMS.ENROLMENT_FROM_TO
 ADD (ID  NUMBER);

DROP SEQUENCE DB_IUMS.SQN_ENROLMENT_FROM_TO_ID;

CREATE SEQUENCE DB_IUMS.SQN_ENROLMENT_FROM_TO_ID
  START WITH 7001
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

DROP TRIGGER DB_IUMS.ENROLMENT_FROM_TO_TRIGGER;

CREATE OR REPLACE TRIGGER DB_IUMS.ENROLMENT_FROM_TO_TRIGGER
BEFORE INSERT ON DB_IUMS.ENROLMENT_FROM_TO
FOR EACH ROW
BEGIN
  SELECT DB_IUMS.SQN_ENROLMENT_FROM_TO_ID.NEXTVAL
  INTO   :new.ID
  FROM   dual;
END;
/