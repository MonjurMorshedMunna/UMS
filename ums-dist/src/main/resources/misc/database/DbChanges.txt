

ALTER TABLE DB_IUMS.SP_PARAMETER
 DROP PRIMARY KEY CASCADE;

DROP TABLE DB_IUMS.SP_PARAMETER CASCADE CONSTRAINTS;

CREATE TABLE DB_IUMS.SP_PARAMETER
(
  ID            VARCHAR2(18 BYTE)               NOT NULL,
  SEMESTER_ID   NUMBER,
  EXAM_TYPE     NUMBER,
  EXCLUDE_DATE  VARCHAR2(20 BYTE)
)
TABLESPACE SYSTEM
RESULT_CACHE (MODE DEFAULT)
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING
NOCOMPRESS
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX DB_IUMS.SP_PARAMETER_PK ON DB_IUMS.SP_PARAMETER
(ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
NOPARALLEL;


CREATE OR REPLACE TRIGGER DB_IUMS.SP_PARAMETER_TRG
BEFORE INSERT ON DB_IUMS.SP_PARAMETER
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT SP_PARAMETER_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/


ALTER TABLE DB_IUMS.SP_PARAMETER ADD (
  CONSTRAINT SP_PARAMETER_PK
  PRIMARY KEY
  (ID)
  USING INDEX DB_IUMS.SP_PARAMETER_PK
  ENABLE VALIDATE);

Insert into DB_IUMS.SP_PARAMETER
   (ID, SEMESTER_ID, EXAM_TYPE, EXCLUDE_DATE)
 Values
   ('1', 11022015, 1, '16-MAR-16');
COMMIT;
