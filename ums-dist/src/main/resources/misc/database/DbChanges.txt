CREATE TABLE DB_IUMS.ADDITIONAL_ROLE_PERMISSIONS
(
  USER_ID      VARCHAR2(30)                     NOT NULL,
  ROLE_ID      NUMBER,
  PERMISSIONS  VARCHAR2(1000),
  VALID_FROM   DATE,
  VALID_TO     DATE,
  STATUS       NUMBER
)
RESULT_CACHE (MODE DEFAULT)
STORAGE    (
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING
NOCOMPRESS
NOCACHE
NOPARALLEL
NOMONITORING;

COMMENT ON COLUMN DB_IUMS.ADDITIONAL_ROLE_PERMISSIONS.USER_ID IS 'ID of the user - Required';

COMMENT ON COLUMN DB_IUMS.ADDITIONAL_ROLE_PERMISSIONS.ROLE_ID IS 'Additional role_id that would be assigned. If role_id is present, permissions will be ignored';

COMMENT ON COLUMN DB_IUMS.ADDITIONAL_ROLE_PERMISSIONS.PERMISSIONS IS 'Additional permissions that would assigned. If permissions are present role_id will be ignored';

COMMENT ON COLUMN DB_IUMS.ADDITIONAL_ROLE_PERMISSIONS.VALID_FROM IS 'Optional. From when additional role/ permissions will be activated';

COMMENT ON COLUMN DB_IUMS.ADDITIONAL_ROLE_PERMISSIONS.VALID_TO IS 'Optional. Until when additional role/ permissions will be active';

COMMENT ON COLUMN DB_IUMS.ADDITIONAL_ROLE_PERMISSIONS.STATUS IS '1/0. Active/Inactive';


CREATE TABLE DB_IUMS.MAIN_NAVIGATION
(
  NAVIGATION_ID  NUMBER,
  MENU_TITLE     VARCHAR2(250),
  PERMISSION     VARCHAR2(250),
  LOCATION       VARCHAR2(1),
  PARENT_MENU    NUMBER,
  VIEW_ICON      VARCHAR2(1000),
  VIEW_ORDER     NUMBER,
  STATUS         NUMBER
)
RESULT_CACHE (MODE DEFAULT)
STORAGE    (
            BUFFER_POOL      DEFAULT
            FLASH_CACHE      DEFAULT
            CELL_FLASH_CACHE DEFAULT
           )
LOGGING
NOCOMPRESS
NOCACHE
NOPARALLEL
NOMONITORING;

COMMENT ON COLUMN DB_IUMS.MAIN_NAVIGATION.NAVIGATION_ID IS 'ID';

COMMENT ON COLUMN DB_IUMS.MAIN_NAVIGATION.MENU_TITLE IS 'Title of the menu item';

COMMENT ON COLUMN DB_IUMS.MAIN_NAVIGATION.PERMISSION IS 'Particular permission for current menu item';

COMMENT ON COLUMN DB_IUMS.MAIN_NAVIGATION.LOCATION IS 'Site location for current menu';

COMMENT ON COLUMN DB_IUMS.MAIN_NAVIGATION.PARENT_MENU IS 'ID of the parent menu. If current menu is submenu it will contain parent menu id';

COMMENT ON COLUMN DB_IUMS.MAIN_NAVIGATION.VIEW_ICON IS 'Icon for view. This might contain appropriate html for view';

COMMENT ON COLUMN DB_IUMS.MAIN_NAVIGATION.VIEW_ORDER IS 'Order of menu items';

COMMENT ON COLUMN DB_IUMS.MAIN_NAVIGATION.STATUS IS '1/0, Active/Inactive';



ALTER TABLE DB_IUMS.MAIN_NAVIGATION ADD (
  PRIMARY KEY
  (NAVIGATION_ID)
  ENABLE VALIDATE);

ALTER TABLE DB_IUMS.PERMISSIONS
 ADD (PERMISSION_ID  INTEGER);

ALTER TABLE DB_IUMS.PERMISSIONS
 ADD CONSTRAINT PERMISSIONS_PK
  PRIMARY KEY
  (PERMISSION_ID)
  ENABLE VALIDATE;

ALTER TABLE DB_IUMS.PERMISSIONS
 ADD (LAST_MODIFIED  VARCHAR2(18));



DROP SEQUENCE DB_IUMS.SQN_PERMSSIONS_ID;

CREATE SEQUENCE DB_IUMS.SQN_PERMSSIONS_ID
  START WITH 1001
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

DROP TRIGGER DB_IUMS.PERMISSIONS_TRIGGER;

CREATE OR REPLACE TRIGGER DB_IUMS.PERMISSIONS_TRIGGER
BEFORE INSERT ON DB_IUMS.PERMISSIONS
FOR EACH ROW
BEGIN
  SELECT DB_IUMS.SQN_PERMSSIONS_ID.NEXTVAL
  INTO   :new.PERMISSION_ID
  FROM   dual;
END;
/
